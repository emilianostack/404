/*
  PROJETO SEGUIDOR DE LINHA
  Orientador: Manfred H. Junior
  Centro Universitário Católica de Santa Catarina
*/

#include <QTRSensors.h>
#include <Servo.h>

#define NUM_SENSORS             6
#define NUM_SAMPLES_PER_SENSOR  4
#define EMITTER_PIN             2

QTRSensorsAnalog qtra((unsigned char[]) {0, 1, 2, 3, 4, 5}, NUM_SENSORS, NUM_SAMPLES_PER_SENSOR, EMITTER_PIN);
unsigned int sensorValues[NUM_SENSORS];

float Kp = 25, Ki = 0.6, Kd = 2;
float error = 0, P = 0, I = 0, D = 0, PID_value = 0;
float previous_error = 0, previous_I = 0;
int initial_motor_speed = 80;
long line = 300;  // Definido que está acima de 500 é a linha escura
long angulo = 90;
Servo servoMotor;


void setup(){
  delay(500);
  Serial.begin(9600);
  delay(1000);
  servoMotor.attach(8);
}


void loop(){
  qtra.read(sensorValues); 
  printValues(sensorValues);
  calculatePID();
  Serial.println();  
};


void printValues(unsigned int s[NUM_SENSORS]){    
/*
  Visão dos sensores no robô
  Sensor | Angulo
       5 = 65
       4 = 70
       3 = 90
       2 = 90
       1 = 110
       0 = 125
  
  --------------------------
  | 5  X  4  3  2  1  X  0 |
  -------------------------- 
          |       |
          |       |
*/


  Serial.print(s[5]);  // 
  Serial.print(" - ");
  Serial.print(s[4]);
  Serial.print(" - ");
  Serial.print(s[3]);
  Serial.print(" - ");
  Serial.print(s[2]);
  Serial.print(" - ");
  Serial.print(s[1]);
  Serial.print(" - ");
  Serial.println(s[0]);
    
  if ((s[5]>=line) && (s[4]<line)){
      
    
    for(int i = angulo; i > 65 ; i--){
      angulo = i; 
      servoMotor.write(angulo);
      delay(100);        
    }
    
  }else if ((s[0]>=line) && (s[1]<line)){
    for(int i = angulo; i < 115 ; i++){
      angulo = i;
      servoMotor.write(angulo); 
      delay(100);        
    }   
    
    //angulo = 115;  // Mais a direita, virar para o centro
  }
  
  if ((s[1]>=line) && (s[2]>=line)){
    //angulo = 110;
    
    if(angulo < 110){
      for(int i = angulo; i < 110 ; i++){
        angulo = i; 
        servoMotor.write(angulo);
        delay(100);        
      } 
    }else if(angulo > 110){
      for(int i = angulo; i < 115 ; i++){
        angulo = i; 
        servoMotor.write(angulo);
        delay(100);        
      }
    }
     
  }
  if ((s[2]>=line) && (s[3]>=line)){
    //angulo = 90;  // Está no centro
    
    if(angulo > 90){
      for(int i = angulo; i > 90; i--){
        angulo = i; 
        servoMotor.write(angulo);
        delay(100);        
      }
    }else if(angulo < 90){
      for(int i = angulo; i < 90; i++){
        angulo = i; 
        servoMotor.write(angulo);
        delay(100);        
      }
    }
    
  }
  
 
};

void calculatePID(){
  P = error;
  I = I + previous_I;
  D = error-previous_error;
  PID_value = (Kp*P) + (Ki*I) + (Kd*D);
  previous_I=I;
  previous_error=error;
  
  Serial.print("Erro:");
  Serial.println(angulo);
  
  if (angulo != 90) {
  delay(500);
  }
}
